import os

from uniswap.EtherClient import web3_client
from uniswap.utils.consts import ERC20_TOKENS, GOERLI
from uniswap.utils.erc20token import EIP20Contract
from uniswap.v3.main import UniswapV3
from web3 import Web3


# from uniswap.utils.erc20token_consts import (
#     ROPSTEN_USDC,
#     ROPSTEN_WETH,
# )
def test_draft():
    # TODO
    # Work in progress. It's a mess for now.
    # provide complete integration and unit tests.
    MY_ADDRESS = Web3.to_checksum_address("0x997d4c6A7cA5d524babDf1b205351f6FB623b5E7")

    ETH_HTTP_URL = os.environ.get("ETH_PROVIDER_URL")
    ETH_WALLET_PASS = os.environ.get("ETH_WALLET_PASS")
    ETH_WALLET_JSON_PATH = os.environ.get("ETH_WALLET_JSON_PATH")
    with open(ETH_WALLET_JSON_PATH) as keyfile:
        ETH_WALLET_JSON = keyfile.read()
    eth_client = web3_client.EtherClient(
        http_url=ETH_HTTP_URL,
        my_address=MY_ADDRESS,
        my_wallet_pass=ETH_WALLET_PASS,
        my_keyfile_json=ETH_WALLET_JSON,
    )
    print(eth_client.w3.eth.block_number)
    uni = UniswapV3(eth_client)

    usdc = EIP20Contract(eth_client, eth_client.w3, ERC20_TOKENS[GOERLI]["USDC"])
    weth = EIP20Contract(eth_client, eth_client.w3, ERC20_TOKENS[GOERLI]["WETH"])
    print(usdc)
    print(usdc.data)
    # print(uni.swap_router_02.address)
    # print(usdc.allowance(uni.swap_router_02.address))

    print(uni.nft_position_manager.address)
    print(uni.nft_position_manager.get_functions())
    print(uni.nft_position_manager._fetch_balance_of())
    print(uni.nft_position_manager._fetch_token_owner_by_index(0))
    # 21794
    _token_uri = uni.nft_position_manager._fetch_token_uri(21794)
    print(_token_uri.name)
    print(_token_uri.description)
    # 21794
    _position_raw = uni.nft_position_manager._fetch_position_info(21794)
    print(_position_raw)
    pool = uni.get_pool(_position_raw.token0, _position_raw.token1, _position_raw.fee)
    print("*" * 100)
    print(pool.get_functions())
    print(pool.data)
    position = uni.nft_position_manager._get_position(
        token_id=21794, position_raw=_position_raw, pool=pool
    )
    print(
        position.token0,
        position.token1,
        position.amount0HR,
        position.amount1HR,
        position.fee,
        position.unclaimedfeesamount0HR,
        position.unclaimedfeesamount1HR,
    )
    print(position.raw)

    print("-" * 100)
    print(
        uni.nft_position_manager.contract.decode_function_input(
            "0x8831645600000000000000000000000007865c6e87b9f70255377e024ace6630c1eaa37f000000000000000000000000c778417e063141139fce010982780140aa0cd5ab00000000000000000000000000000000000000000000000000000000000001f40000000000000000000000000000000000000000000000000000000000032dac0000000000000000000000000000000000000000000000000000000000033d7e00000000000000000000000000000000000000000000000000000000009896800000000000000000000000000000000000000000000000000008f5f885cf03a3000000000000000000000000000000000000000000000000000000000062831f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000997d4c6a7ca5d524babdf1b205351f6fb623b5e7000000000000000000000000000000000000000000000000000000006332a8b8"  # noqa
        )
    )

    print("Check allowance")
    usdc_allowance_nft_manager = (
        usdc.allowance(uni.nft_position_manager.address) / 10**usdc.data.decimals
    )
    weth_allowance_nft_manager = (
        weth.allowance(uni.nft_position_manager.address) / 10**weth.data.decimals
    )
    print(f"USDC: {usdc_allowance_nft_manager:,.2f}")
    print(f"WETH: {weth_allowance_nft_manager:,.8f}")
    print("-" * 100)
    # Example position

    # 0x07865c6E87B9F70255377e024ace6630C1Eaa37F - WETH
    # 0xc778417E063141139Fce010982780140Aa0cD5Ab - USDC
    # 500 - fee
    # 208300 - tickLower
    # 212350 - tickUpper
    # 10000000 - amount0
    # 2522247559316387 - amount1
    # 6456095 - amount0min
    # 0 - amount1min
    # 0x997d4c6A7cA5d524babDf1b205351f6FB623b5E7 - recepient
    # 1664264376 - deadline
    #
    # Minting - OK
    # print(
    #     uni.nft_position_manager._mint(
    #         token0="0x07865c6E87B9F70255377e024ace6630C1Eaa37F",
    #         token1="0xc778417E063141139Fce010982780140Aa0cD5Ab",
    #         fee=500,
    #         tick_lower=208300,
    #         tick_upper=212350,
    #         amount0=10000000,
    #         amount1=2522247559316387,
    #         amount0_min=6456095,
    #         amount1_min=0,
    #         # recipient - by default my_address
    #         # deadline - by default 2**64 - no limit
    #         wait=True,  # wait - by default, false
    #     )
    # )

    print("-" * 100)
    multi = uni.nft_position_manager.contract.decode_function_input(
        "0xac9650d8000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000c4219f5d1700000000000000000000000000000000000000000000000000000000000056af0000000000000000000000000000000000000000000000000000000000989680000000000000000000000000000000000000000000000000003110aca363392c0000000000000000000000000000000000000000000000000000000000949d57000000000000000000000000000000000000000000000000002fcc4b2e1fad260000000000000000000000000000000000000000000000000000000063382ff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000412210e8a00000000000000000000000000000000000000000000000000000000"  # noqa
    )
    print(multi)
    print(uni.nft_position_manager.contract.decode_function_input(multi[1]["data"][0]))

    # Increase liqudity - OK
    # 22191
    # 1000000 - amount0
    # 252224755931638 - amount1
    # 645609 - amount0min
    # 0 - amount1min
    # by default - deadline
    # print(
    #     uni.nft_position_manager._increase_liquidity(
    #         token_id=22191,
    #         amount0=10000000,
    #         amount1=13810607520430380,
    #         amount0_min=6456095,
    #         amount1_min=0,
    #         # deadline - by default 2**64 - no limit
    #         # wait=True,  # wait - by default, false
    #     )
    # )
    print("-" * 100)
    multi = uni.nft_position_manager.contract.decode_function_input(
        # "0xac9650d80000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000000a40c49ccbe00000000000000000000000000000000000000000000000000000000000056af0000000000000000000000000000000000000000000000000000038653bc0ff30000000000000000000000000000000000000000000000000000000000729d030000000000000000000000000000000000000000000000000024654e588469130000000000000000000000000000000000000000000000000000000063385158000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084fc6f786500000000000000000000000000000000000000000000000000000000000056af000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c00000000000000000000000000000000000000000000000000247542f3f2d837000000000000000000000000997d4c6a7ca5d524babdf1b205351f6fb623b5e7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064df2ab5bb00000000000000000000000007865c6e87b9f70255377e024ace6630c1eaa37f000000000000000000000000000000000000000000000000000000000072cbd1000000000000000000000000997d4c6a7ca5d524babdf1b205351f6fb623b5e700000000000000000000000000000000000000000000000000000000"  # noqa
        "0xac9650d8000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000a40c49ccbe000000000000000000000000000000000000000000000000000000000000542200000000000000000000000000000000000000000000000000001cb79a3ede3a0000000000000000000000000000000000000000000000000000000002f7960500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063385308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084fc6f78650000000000000000000000000000000000000000000000000000000000005422000000000000000000000000997d4c6a7ca5d524babdf1b205351f6fb623b5e700000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000"  # noqa
    )
    print(multi)
    [
        print(uni.nft_position_manager.contract.decode_function_input(i))
        for i in multi[1]["data"]
    ]
    # print(uni.nft_position_manager.contract.decode_function_input(multi[1]["data"][0]))
    # Decrease liqudity
    # 22191
    # 1000000 - amount0_min
    # 252224755931638 - amount1_min
    # by default - deadline
    # print(
    #     uni.nft_position_manager._decrease_liquidity(
    #         token_id=22191,
    #         liquidity=3875465334771,
    #         amount0_min=7511299,
    #         amount1_min=10244486328510739,
    #         # deadline - by default 2**64 - no limit
    #         # wait=True,  # wait - by default, false
    #     ).hex()
    # )

    # Collect - OK
    # 22191
    # by default MY_ADDRESS - def
    # by deafault - amount0_max
    # by deafault - amount1_max
    # print(
    #     uni.nft_position_manager._collect(
    #         token_id=22191,
    #     ).hex()
    # )
